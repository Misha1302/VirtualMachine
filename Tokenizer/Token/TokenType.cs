namespace Tokenizer.Token;

[Flags]
public enum TokenType
{
    OpenParentheses = 0b0000_0000_0000_0000_0000_0000_0000_0001, // (
    CloseParentheses = 0b0000_0000_0000_0000_0000_0000_0000_0010, // )

    OpenBracket = 0b0000_0000_0000_0000_0000_0000_0000_0100, // [
    CloseBracket = 0b0000_0000_0000_0000_0000_0000_0000_1000, // ]

    End = 0b0000_0000_0000_0000_0000_0000_0001_0000, // end
    For = 0b0000_0000_0000_0000_0000_0000_0010_0000, // for

    Number = 0b0000_0000_0000_0000_0000_0000_0100_0000, // 0

    Variable = 0b0000_0000_0000_0000_0000_0000_1000_0000, // i

    Text = 0b0000_0000_0000_0000_0000_0001_0000_0000, // XXX

    String = 0b0000_0000_0000_0000_0000_0010_0000_0000, // 'S t r'

    Plus = 0b0000_0000_0000_0000_0000_0100_0000_0000, // +
    Minus = 0b0000_0000_0000_0000_0000_1000_0000_0000, // -
    Multiply = 0b0000_0000_0000_0000_0001_0000_0000_0000, // *
    Divide = 0b0000_0000_0000_0000_0010_0000_0000_0000, // /

    ForeignMethod = 0b0000_0000_0000_0000_0100_0000_0000_0000, // Print

    Eof = 0b0000_0000_0000_0000_1000_0000_0000_0000,
    Unknown = 0b0000_0000_0000_0001_0000_0000_0000_0000,
    NewLine = 0b0000_0000_0000_0010_0000_0000_0000_0000,
    Comma = 0b0000_0000_0000_0100_0000_0000_0000_0000,
    Dot = 0b0000_0000_0000_1000_0000_0000_0000_0000,
    WhiteSpace = 0b0000_0000_0001_0000_0000_0000_0000_0000,
    EqualsSign = 0b0000_0000_0010_0000_0000_0000_0000_0000,
    Comment = 0b0000_0000_0100_0000_0000_0000_0000_0000,
    Import = 0b0000_0000_1000_0000_0000_0000_0000_0000,
    Var = 0b0000_0001_0000_0000_0000_0000_0000_0000,
    NewVariable = 0b0000_0010_0000_0000_0000_0000_0000_0000,
    LessThan = 0b0000_0100_0000_0000_0000_0000_0000_0000,
    GreatThan = 0b0000_1000_0000_0000_0000_0000_0000_0000,
    IsEquals = 0b0001_0000_0000_0000_0000_0000_0000_0000,
    If = 0b0010_0000_0000_0000_0000_0000_0000_0000,
    Else = 0b0100_0000_0000_0000_0000_0000_0000_0000
}